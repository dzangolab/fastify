import { sql } from "slonik";

import { TABLE_USER_DEVICES } from "../constants";

import type { ApiConfig } from "@dzangolab/fastify-config";
import type { QuerySqlToken } from "slonik";
import type { ZodTypeAny } from "zod";

const queryToCreateTable = (config: ApiConfig): QuerySqlToken<ZodTypeAny> => {
  const tableName =
    config.firebase.table?.userDevices?.name || TABLE_USER_DEVICES;

  const tableIdentifier = sql.identifier([tableName]);

  return sql.unsafe`
    DO $$
    BEGIN
      IF NOT EXISTS (SELECT FROM pg_tables WHERE tablename = ${tableName}) THEN
      CREATE TABLE ${tableIdentifier} (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        user_id VARCHAR(255) NOT NULL,
        device_token VARCHAR(255) NOT NULL,
        created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
      );
      END IF;

      IF NOT EXISTS (SELECT FROM pg_indexes WHERE indexname = 'idx_user_id_device_token') THEN
        CREATE INDEX idx_user_id_device_token ON ${tableIdentifier} (user_id, device_token);
      END IF;
    END $$;
  `;
};

export default queryToCreateTable;
